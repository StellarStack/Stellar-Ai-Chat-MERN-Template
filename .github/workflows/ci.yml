name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-server:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    defaults:
      run:
        working-directory: ./server

    steps:
    - uses: actions/checkout@v3

    - name: Create backend .env file
      run: |
        echo "MONGO_USER=$MONGO_USER" > .env
        echo "MONGO_PASS=$MONGO_PASS" >> .env
        echo "MONGO_URL=$MONGO_URL" >> .env
        echo "PORT=$PORT" >> .env
        echo "CLIENT_REDIRECT_URL=$CLIENT_REDIRECT_URL" >> .env
        echo "GEMINI_API_KEY=$GEMINI_API_KEY" >> .env
        echo "CLIENT_API_KEY=$CLIENT_API_KEY" >> .env
        echo "GEO_API_KEY=$GEO_API_KEY" >> .env
        echo "LOCATION_API_KEY=$LOCATION_API_KEY" >> .env
        echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
        echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
        echo "GOOGLE_OAUTH_REDIRECT_URL=$GOOGLE_OAUTH_REDIRECT_URL" >> .env
        echo "ACCESS_TOKEN_JWT_SECRET=$ACCESS_TOKEN_JWT_SECRET" >> .env
        echo "REFRESH_TOKEN_JWT_SECRET=$REFRESH_TOKEN_JWT_SECRET" >> .env
        echo "ACCESS_TOKEN_EXPIRETIME=$ACCESS_TOKEN_EXPIRETIME" >> .env
        echo "REFRESH_TOKEN_EXPIRETIME=$REFRESH_TOKEN_EXPIRETIME" >> .env
        echo "APPLICATION_TYPE=$APPLICATION_TYPE" >> .env
        echo "COOKIE_DOMAIN=$COOKIE_DOMAIN" >> .env
      shell: bash
      env:
        MONGO_USER: ${{ vars.MONGO_USER }}
        MONGO_PASS: ${{ vars.MONGO_PASS }}
        MONGO_URL: ${{ vars.MONGO_URL }}
        PORT: ${{ vars.PORT }}
        CLIENT_REDIRECT_URL: ${{ vars.CLIENT_REDIRECT_URL }}
        GEMINI_API_KEY: ${{ vars.GEMINI_API_KEY }}
        CLIENT_API_KEY: ${{ vars.CLIENT_API_KEY }}
        GEO_API_KEY: ${{ vars.GEO_API_KEY }}
        LOCATION_API_KEY: ${{ vars.LOCATION_API_KEY }}
        GOOGLE_CLIENT_ID: ${{ vars.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ vars.GOOGLE_CLIENT_SECRET }}
        GOOGLE_OAUTH_REDIRECT_URL: ${{ vars.GOOGLE_OAUTH_REDIRECT_URL }}
        ACCESS_TOKEN_JWT_SECRET: ${{ vars.ACCESS_TOKEN_JWT_SECRET }}
        REFRESH_TOKEN_JWT_SECRET: ${{ vars.REFRESH_TOKEN_JWT_SECRET }}
        ACCESS_TOKEN_EXPIRETIME: ${{ vars.ACCESS_TOKEN_EXPIRETIME }}
        REFRESH_TOKEN_EXPIRETIME: ${{ vars.REFRESH_TOKEN_EXPIRETIME }}
        APPLICATION_TYPE: ${{ vars.APPLICATION_TYPE }}
        COOKIE_DOMAIN: ${{ vars.COOKIE_DOMAIN }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./server/package-lock.json

    - name: Install Server Dependencies
      run: npm ci

    - name: Run Server Tests
      run: npm test
      env:
        CI: true

  test-client:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    defaults:
      run:
        working-directory: ./client-fe

    steps:
    - uses: actions/checkout@v3

    - name: Create client .env file
      run: |
        echo "REACT_APP_GOOGLE_CLIENT_ID=$REACT_APP_GOOGLE_CLIENT_ID" > .env
        echo "REACT_APP_GOOGLE_CLIENT_SECRET=$REACT_APP_GOOGLE_CLIENT_SECRET" >> .env
        echo "REACT_APP_GOOGLE_OAUTH_REDIRECT_URL=$REACT_APP_GOOGLE_OAUTH_REDIRECT_URL" >> .env
        echo "REACT_APP_SERVER_ENDPOINT=$REACT_APP_SERVER_ENDPOINT" >> .env
        echo "REACT_APP_GEMINI_KEY=$REACT_APP_GEMINI_KEY" >> .env
      shell: bash
      env:
        REACT_APP_GOOGLE_CLIENT_ID: ${{ vars.REACT_APP_GOOGLE_CLIENT_ID }}
        REACT_APP_GOOGLE_CLIENT_SECRET: ${{ vars.REACT_APP_GOOGLE_CLIENT_SECRET }}
        REACT_APP_GOOGLE_OAUTH_REDIRECT_URL: ${{ vars.REACT_APP_GOOGLE_OAUTH_REDIRECT_URL }}
        REACT_APP_SERVER_ENDPOINT: ${{ vars.REACT_APP_SERVER_ENDPOINT }}
        REACT_APP_GEMINI_KEY: ${{ vars.REACT_APP_GEMINI_KEY }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./client-fe/package-lock.json

    - name: Install Client Dependencies
      run: npm ci

    - name: Run Client Tests
      run: npm test
      env:
        CI: true

  build-server:
    needs: test-server
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    defaults:
      run:
        working-directory: ./server

    steps:
    - uses: actions/checkout@v3

    - name: Create backend .env file
      run: |
        echo "MONGO_USER=$MONGO_USER" > .env
        echo "MONGO_PASS=$MONGO_PASS" >> .env
        echo "MONGO_URL=$MONGO_URL" >> .env
        echo "PORT=$PORT" >> .env
        echo "CLIENT_REDIRECT_URL=$CLIENT_REDIRECT_URL" >> .env
        echo "GEMINI_API_KEY=$GEMINI_API_KEY" >> .env
        echo "CLIENT_API_KEY=$CLIENT_API_KEY" >> .env
        echo "GEO_API_KEY=$GEO_API_KEY" >> .env
        echo "LOCATION_API_KEY=$LOCATION_API_KEY" >> .env
        echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
        echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
        echo "GOOGLE_OAUTH_REDIRECT_URL=$GOOGLE_OAUTH_REDIRECT_URL" >> .env
        echo "ACCESS_TOKEN_JWT_SECRET=$ACCESS_TOKEN_JWT_SECRET" >> .env
        echo "REFRESH_TOKEN_JWT_SECRET=$REFRESH_TOKEN_JWT_SECRET" >> .env
        echo "ACCESS_TOKEN_EXPIRETIME=$ACCESS_TOKEN_EXPIRETIME" >> .env
        echo "REFRESH_TOKEN_EXPIRETIME=$REFRESH_TOKEN_EXPIRETIME" >> .env
        echo "APPLICATION_TYPE=$APPLICATION_TYPE" >> .env
        echo "COOKIE_DOMAIN=$COOKIE_DOMAIN" >> .env
      shell: bash
      env:
        MONGO_USER: ${{ vars.MONGO_USER }}
        MONGO_PASS: ${{ vars.MONGO_PASS }}
        MONGO_URL: ${{ vars.MONGO_URL }}
        PORT: ${{ vars.PORT }}
        CLIENT_REDIRECT_URL: ${{ vars.CLIENT_REDIRECT_URL }}
        GEMINI_API_KEY: ${{ vars.GEMINI_API_KEY }}
        CLIENT_API_KEY: ${{ vars.CLIENT_API_KEY }}
        GEO_API_KEY: ${{ vars.GEO_API_KEY }}
        LOCATION_API_KEY: ${{ vars.LOCATION_API_KEY }}
        GOOGLE_CLIENT_ID: ${{ vars.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ vars.GOOGLE_CLIENT_SECRET }}
        GOOGLE_OAUTH_REDIRECT_URL: ${{ vars.GOOGLE_OAUTH_REDIRECT_URL }}
        ACCESS_TOKEN_JWT_SECRET: ${{ vars.ACCESS_TOKEN_JWT_SECRET }}
        REFRESH_TOKEN_JWT_SECRET: ${{ vars.REFRESH_TOKEN_JWT_SECRET }}
        ACCESS_TOKEN_EXPIRETIME: ${{ vars.ACCESS_TOKEN_EXPIRETIME }}
        REFRESH_TOKEN_EXPIRETIME: ${{ vars.REFRESH_TOKEN_EXPIRETIME }}
        APPLICATION_TYPE: ${{ vars.APPLICATION_TYPE }}
        COOKIE_DOMAIN: ${{ vars.COOKIE_DOMAIN }}

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: ./server/package-lock.json

    - name: Build Server
      run: |
        npm ci
        npm run build

  build-client:
    needs: test-server
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./client-fe
    steps:
    - uses: actions/checkout@v3

    - name: Create client .env file
      run: |
        echo "REACT_APP_GOOGLE_CLIENT_ID=$REACT_APP_GOOGLE_CLIENT_ID" > .env
        echo "REACT_APP_GOOGLE_CLIENT_SECRET=$REACT_APP_GOOGLE_CLIENT_SECRET" >> .env
        echo "REACT_APP_GOOGLE_OAUTH_REDIRECT_URL=$REACT_APP_GOOGLE_OAUTH_REDIRECT_URL" >> .env
        echo "REACT_APP_SERVER_ENDPOINT=$REACT_APP_SERVER_ENDPOINT" >> .env
        echo "REACT_APP_GEMINI_KEY=$REACT_APP_GEMINI_KEY" >> .env
      shell: bash
      env:
        REACT_APP_GOOGLE_CLIENT_ID: ${{ vars.REACT_APP_GOOGLE_CLIENT_ID }}
        REACT_APP_GOOGLE_CLIENT_SECRET: ${{ vars.REACT_APP_GOOGLE_CLIENT_SECRET }}
        REACT_APP_GOOGLE_OAUTH_REDIRECT_URL: ${{ vars.REACT_APP_GOOGLE_OAUTH_REDIRECT_URL }}
        REACT_APP_SERVER_ENDPOINT: ${{ vars.REACT_APP_SERVER_ENDPOINT }}
        REACT_APP_GEMINI_KEY: ${{ vars.REACT_APP_GEMINI_KEY }}

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: ./client-fe/package-lock.json

    - name: Build Client
      run: |
        npm ci
        npm run build

    - name: Deploy to Nexlayer
      run: nexlayer deploy
